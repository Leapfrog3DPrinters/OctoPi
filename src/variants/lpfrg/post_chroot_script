#!/usr/bin/env bash
set -x

source /common.sh
install_chroot_fail_on_error_trap

echo "--- Copying additional LPFRG files"
unpack /filesystem/root /

#cleanup
apt-get clean

pushd /home/pi
	if [ "$OCTOPI_INCLUDE_OCTOPRINT_LUI" == "yes" ]
 	then
		echo "--- Installing OctoPrint-LUI"

		gitclone OCTOPI_OCTOPRINT_LUI_REPO OctoPrint-LUI
		pushd OctoPrint-LUI
			PIP_DEFAULT_TIMEOUT=60 sudo -u pi /home/pi/$OCTOPI_OCTOPRINT_VENV_PATH/bin/python setup.py install
		popd
	fi

	if [ "$OCTOPI_INCLUDE_OCTOPRINT_FLASHARDUINO" == "yes" ]
 	then
		echo "--- Installing OctoPrint-flashWArduino"

		gitclone OCTOPI_OCTOPRINT_FLASHARDUINO_REPO OctoPrint-flashArduino
		pushd OctoPrint-flashArduino
			PIP_DEFAULT_TIMEOUT=60 sudo -u pi /home/pi/$OCTOPI_OCTOPRINT_VENV_PATH/bin/python setup.py install
		popd
	fi

	if [ "$OCTOPI_INCLUDE_OCTOPRINT_GCODERENDER" == "yes" ]
 	then
		echo "--- Installing OctoPrint-gcodeRender"

		gitclone OCTOPI_OCTOPRINT_GCODERENDER_REPO OctoPrint-gcodeRender
		pushd OctoPrint-gcodeRender
			PIP_DEFAULT_TIMEOUT=60 sudo -u pi /home/pi/$OCTOPI_OCTOPRINT_VENV_PATH/bin/python setup.py install
		popd
	fi

	if [ "$OCTOPI_INCLUDE_OCTOPRINT_NETWORKMANAGER" == "yes" ]
 	then
		echo "--- Installing OctoPrint-NetworkManager"

		gitclone OCTOPI_OCTOPRINT_NETWORKMANAGER_REPO OctoPrint-NetworkManager
		pushd OctoPrint-NetworkManager
			PIP_DEFAULT_TIMEOUT=60 sudo -u pi /home/pi/$OCTOPI_OCTOPRINT_VENV_PATH/bin/python setup.py install
		popd
	fi
popd

echo "--- Installing aasoftpoweroff"
chmod +x /etc/init.d/aasoftpoweroff
update-rc.d aasoftpoweroff defaults 

echo "--- Installing cleanupmounts"
chmod +x /etc/init.d/cleanupmounts
update-rc.d cleanupmounts defaults